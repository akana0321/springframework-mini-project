<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
                 "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!-- dao의 interface와 연결하기 위해 namespace에 해당 인터페이스 경로를 줌 -->
<mapper namespace="com.mycompany.webapp.dao.UserDao">
	<resultMap id="userMap" type="user">
		<result column="user_id" property="uid"/>
		<result column="user_role" property="urole"/>
		<result column="user_enabled" property="uenabled"/>
		<result column="user_password" property="upassword"/>
		<result column="user_name" property="uname"/>
		<result column="user_email" property="uemail"/>
		<result column="user_tel" property="utel"/>
		<result column="user_sign_up_date" property="usignUpdate"/>
		<result column="user_birth" property="ubirth"/>
		<result column="user_zipcode" property="uzipcode"/>
		<result column="user_address1" property="uaddress1"/>
		<result column="user_address2" property="uaddress2"/>
		
		<association property="uattach" javaType="attach">
			<result column="attach_no" property="ano"/>
			<result column="attach_target_table" property="attable"/>
			<result column="attach_target_id" property="atid"/>
			<result column="attach_target_index" property="atindex"/>
			<result column="attach_content_type" property="acontentType"/>
			<result column="attach_save_name" property="asname"/>
			<result column="attach_original_name" property="aoname"/>
		</association>
	</resultMap>
	
	<select id="selectByUid" parameterType="string" resultMap="userMap" fetchSize="1000">
		SELECT user_id, user_role, user_enabled, user_password, user_name, user_email, user_tel, user_sign_up_date, user_birth, user_zipcode, user_address1, user_address2,
			   attach_no, attach_target_table, attach_target_id, attach_target_index, attach_content_type, attach_save_name, attach_original_name
	   	FROM users u
	    LEFT OUTER JOIN attach a ON a.attach_target_table like 'USERS'
	   	 AND u.user_id = a.attach_target_id
	   	WHERE u.user_id = #{uid}
	</select>
	
	<select id="selectLoginInfoByUid" parameterType="string" resultType="string" fetchSize="1000">
		SELECT user_password
		FROM users
		WHERE user_id = #{uid}
	</select>
	
	
	<select id="count" resultType="int">
		SELECT count(*) FROM users
	</select>

	<insert id="insert" parameterType="user">
		INSERT INTO users 
		(user_id, user_role, user_enabled, user_password, user_name, user_email, user_tel, user_sign_up_date, user_birth, user_zipcode, user_address1, user_address2) 
		VALUES (#{uid}, #{urole}, #{uenabled}, #{upassword}, #{uname}, #{uemail}, #{utel}, sysdate, #{ubirth}, #{uzipcode}, #{uaddress1}, #{uaddress2})
	</insert>
	
	<delete id="deleteByUid" parameterType="string">
		DECLARE
		BEGIN
			DELETE FROM users WHERE user_id = #{uid};
			
			DELETE FROM attach
			WHERE attach_target_table like 'USERS'
			  AND attach_target_id=#{uid};
		END;
	</delete>
	
	<update id="update" parameterType="user">
		UPDATE users SET
			<if test="ubirth != null">
				user_birth = #{ubirth},
			</if>
			user_tel = #{utel},
			user_email = #{uemail},
			<if test="uzipcode != null">
				user_zipcode = #{uzipcode},
				user_address1 = #{uaddress1},
				user_address2 = #{uaddress2},
			</if>
			user_password = #{upassword}
		WHERE user_id = #{uid}	
	</update>
	
	<select id="findId" resultType="user">
		SELECT * FROM users
		WHERE user_name = #{uname} 
			AND user_tel = #{utel};
	</select>
	
	<select id="findPassword" resultType="user">
		SELECT * FROM users 
		WHERE user_id=#{uid} 
			AND user_name=#{uname} 
			AND user_tel=#{utel}
	</select>
	
	<update id="updatePassword">
		UPDATE users SET user_password=#{upassword} WHERE user_id=#{uid} 
	</update>
</mapper>

